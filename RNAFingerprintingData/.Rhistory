devtools::document()
devtools::build()
remotes::install_github("igrabski/fingerprinting.data.internal@v1.0.0")
Sys.setenv(GITHUB_PAT = "11ANOBY2Q0sUsCmFV5LdQP_EmzK0Weg0mqWcgjBD98MFc6wzsP2Iy0RRGxlPCtoRWD5XDELYUZSpoSFJXR")
remotes::install_github("igrabski/fingerprinting.data.internal@v1.0.0")
Sys.setenv(GITHUB_PAT = "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
")
remotes::install_github("igrabski/fingerprinting.data.internal@v1.0.0")
Sys.setenv(GITHUB_PAT = "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")
remotes::install_github("igrabski/fingerprinting.data.internal@v1.0.0")
remotes::install_github("igrabski/fingerprinting.data.internal")
remotes::install_url("https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz")
url <- "https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz"
pat <- "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"
httr::with_config(
httr::config(httpheader = c(Authorization = paste("token", pat))),
remotes::install_url(url)
)
setwd('../../')
url <- "https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz"
pat <- Sys.getenv("GITHUB_PAT")  # Or hardcode for testing
dest <- tempfile(fileext = ".tar.gz")
# Use curl to download the file with an auth token
curl::curl_download(
url,
dest,
handle = curl::new_handle(httpheader = c(Authorization = paste("token", pat)))
)
httr::GET(
"https://api.github.com/user",
httr::add_headers(Authorization = paste("token", Sys.getenv("GITHUB_PAT")))
) |> httr::content()
httr::GET(
"https://api.github.com/user",
httr::add_headers(Authorization = paste("token", 11ANOBY2Q0sUsCmFV5LdQP_EmzK0Weg0mqWcgjBD98MFc6wzsP2Iy0RRGxlPCtoRWD5XDELYUZSpoSFJXR))
httr::GET(
"https://api.github.com/user",
httr::add_headers(Authorization = paste("token", '11ANOBY2Q0sUsCmFV5LdQP_EmzK0Weg0mqWcgjBD98MFc6wzsP2Iy0RRGxlPCtoRWD5XDELYUZSpoSFJXR'))
) |> httr::content()
url <- "https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz"
dest <- tempfile(fileext = ".tar.gz")
pat <- Sys.getenv("GITHUB_PAT")
curl::curl_download(
url,
dest,
handle = curl::new_handle(httpheader = c(Authorization = paste("token", pat)))
)
url <- "https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz"
dest <- tempfile(fileext = ".tar.gz")
pat <- Sys.getenv("GITHUB_PAT")
handle <- curl::new_handle(
httpheader = c(
"Authorization" = paste("token", pat),
"Accept" = "application/octet-stream"
)
)
curl::curl_download(url, dest, handle = handle)
library(httr)
url <- "https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz"
pat <- Sys.getenv("GITHUB_PAT")
dest <- tempfile(fileext = ".tar.gz")
res <- GET(url, add_headers(Authorization = paste("token", pat)), write_disk(dest, overwrite=TRUE), followlocation = TRUE)
if (status_code(res) == 200) {
install.packages(dest, repos = NULL, type = "source")
} else {
stop("Failed to download tarball: ", status_code(res))
}
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedFingerprints('gwps')
remotes::install_github("igrabski/fingerprinting.data.internal@v1.0.0")
install.packages(
"https://github.com/igrabski/fingerprinting.data.internal/releases/download/v1.0.0/fingerprinting.data.internal_0.1.0.tar.gz",
repos = NULL,
type = "source"
)
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedFingerprints('gwps')
InstallPrecomputedFingerprints('gwps')
gwps_fingerprints <- LoadPrecomputedFingerprints('gwps')
data(package='gwps')
comp <- 'gwps_fingerprints1'
suppressWarnings(data(comp, package = pkg))
pkg<-'gwps'
suppressWarnings(data(comp, package = pkg))
get(comp)
suppressWarnings(data(comp, package = pkg))
get(comp,envir=.GlobalEnv)
data(comp, package = pkg)
comp <- 'gwps_fingerprints1'
data(comp,package=pkg)
data(list=comp,package=pkg)
remove.packages('fingerprinting.data.internal')
library(fingerprinting.data.internal)
remotes::install_github("igrabski/fingerprinting.data.internal", subdir = "fingerprinting.data.internal")
remotes::install_github("igrabski/fingerprinting.data.internal",
subdir = "fingerprinting.data.internal/fingerprinting.data.internal")
remotes::install_github("igrabski/fingerprinting.data.internal", subdir = "fingerprinting.data.internal/fingerprinting.data.internal")
?remotes::install_github
devtools::install_github("igrabski/fingerprinting.data.internal", subdir = "fingerprinting.data.internal")
remotes::install_github("igrabski/fingerprinting.data.internal")
httr::GET("https://api.github.com/repos/igrabski/fingerprinting.data.internal")
library(pa)
library(pak)
install.packages("pak")
pak::pkg_install("igrabski/fingerprinting.data.internal", subdir = "fingerprinting.data.internal")
?pak::pkg_install
pak::pkg_install("igrabski/fingerprinting.data.internal/fingerprinting.data.internal")
devtools::clean_dll()
devtools::document()
devtools::build()
devtools::clean_dll()
devtools::document()
devtools::build()
pak::pkg_install("igrabski/fingerprinting.data.internal/fingerprinting.data.internal")
devtools::clean_dll()
devtools::document()
devtools::clean_dll()
devtools::document()
devtools::clean_dll()
devtools::document()
devtools::build()
?pak::pkg_install
pak::pkg_install("igrabski/fingerprinting.data.internal/fingerprinting.data.internal",
upgrade = FALSE)
remotes::install_url("https://github.com/igrabski/fingerprinting.data.internal/raw/main/fingerprinting.data.internal_0.1.0.tar.gz")
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedFingerprints('gwps')
gwps_fingerprints <- LoadPrecomputedFingerprints(gwps)
gwps_fingerprints <- LoadPrecomputedFingerprints('gwps')
?SeuratObject::GetAssayData
devtools::clean_dll()
devtools::document()
devtools::build()
devtools::clean_dll()
devtools::document()
devtools::build()
devtools::install()
library(fingerprinting.data.internal)
AvailableData()
remove.packages("fingerprinting.data.internal")
remove.packages("fingerprinting.data.internal")
unlink(file.path(.libPaths()[1], "fingerprinting.data.internal"), recursive = TRUE)
.rs.restartR()  # In RStudio
devtools::install()
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedDictionary('gwps')
gwps_dictionary <- LoadPrecomputedDictionary('gwps')
names(gwps_dictionary)
gwps_dictionary <- ConvertGenes(gwps_dictionary)
gwps_dictionary <- LoadPrecomputedDictionary('gwps',gene_key='SYMBOL')
remotes::install_url("https://github.com/igrabski/fingerprinting.data.internal/raw/main/fingerprinting.data.internal_0.1.0.tar.gz")
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedDictionary('gwps')
gwps_dictionary <- LoadPrecomputedDictionary('gwps')
gwps_dictionary <- LoadPrecomputedDictionary('gwps',gene_key='SYMBOL')
?Data
?data
devtools::clean_dll()
devtools::document()
devtools::build()
devtools::install()
library(fingerprinting.data.internal)
gwps_dictionary <- LoadPrecomputedDictionary('gwps')
remove.packages("fingerprinting.data.internal")
# Clear any cached files
unlink(file.path(.libPaths()[1], "fingerprinting.data.internal"), recursive = TRUE)
# Restart R session
.rs.restartR()
devtools::install()
library(fingerprinting.data.internal)
gwps_dictionary <- LoadPrecomputedDictionary('gwps')
remotes::install_url("https://github.com/igrabski/fingerprinting.data.internal/raw/main/fingerprinting.data.internal_0.1.0.tar.gz")
library(fingerprinting.data.internal)
AvailableData()
InstallPrecomputedDictionary('gwps')
gwps_dict <- LoadPrecomputedDictionary('gwps')
gwps_dict <- LoadPrecomputedDictionary('gwps',gene_key='SYMBOL')
AvailableData()
bcell <- LoadPrecomputedDictionary('B_cell_immune_dictionary')
InstallPrecomputedDictionary('B_cell_immune_dictionary')
bcell <- LoadPrecomputedDictionary('B_cell_immune_dictionary')
str(bcell)
devtools::clean_dll()
devtools::document()
devtools::build()
